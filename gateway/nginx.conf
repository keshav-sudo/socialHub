events {}

http {
    upstream auth_service {
        server auth-service:5000;
    }

    upstream post_service {
        server post-service:5001;
    }

    upstream notification_service{
        server notification-service:5002;
    }
    map $upstream_http_x_user_payload $auth_user_payload {
        default $upstream_http_x_user_payload;
    }

    server {
        # Timeouts are good practice
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        listen 80;

        # ---------------------------
        # 1. Internal Auth Verification Endpoint (no change needed)
        # ---------------------------
        location = /auth/verify {
            internal;
            proxy_pass http://auth_service/api/v1/auth/verify-user;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Authorization $http_authorization;
        }

        # ---------------------------
        # 2. Public Auth Service Routes (no change needed)
        # ---------------------------
        location /auth/ {
            proxy_pass http://auth_service/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # ---------------------------
        # 3. Secured Posts Service Routes (no change needed)
        # ---------------------------
        location /posts/ {
            auth_request /auth/verify;
            auth_request_set $auth_user_payload $upstream_http_x_user_payload;
            proxy_set_header x-user-payload $auth_user_payload;

            proxy_pass http://post_service/api/v1/posts/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # ----------------------------------------------------
        # 4. Notification Service Routes (FIXED FOR 301)
        # ----------------------------------------------------

        # A. Exact match for /notify (Stops the 301 redirect for the no-slash request)
        location = /notify {
            auth_request /auth/verify;
            auth_request_set $auth_user_payload $upstream_http_x_user_payload;
            proxy_set_header x-user-payload $auth_user_payload;

            # proxy_pass to the exact backend path
            proxy_pass http://notification_service/notify;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # B. Location for /notify/ and everything under it
        location /notify/ {
            auth_request /auth/verify;
            auth_request_set $auth_user_payload $upstream_http_x_user_payload;
            proxy_set_header x-user-payload $auth_user_payload;

            # proxy_pass to the base notification path
            proxy_pass http://notification_service/notify/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # ---------------------------
        # 5. Catch-all for non-matching routes (no change needed)
        # ---------------------------
        location / {
            return 404 "API endpoint not found.";
        }
    }
}