events {}

http {
    upstream auth_service {
        server auth-service:5000;
    }

    upstream post_service {
        server post-service:5001;
    }

    map $upstream_http_x_user_payload $auth_user_payload {
        default $upstream_http_x_user_payload;
    }

    server {
        listen 80;

        # 1. Internal Auth Verification endpoint
        location /auth/verify {
            proxy_pass http://auth_service/api/v1/auth/verify-user;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # 2. Public Auth Service Routes
        location /auth/ {
            proxy_pass http://auth_service/api/v1/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # 3. Secured Posts Service Routes (FIXED with rewrite)
        # Use regex location (~ ^/posts/) to correctly use rewrite.
        location ~ ^/posts/(.*)$ {
            # 1. Security Gate
            auth_request /auth/verify;
            proxy_set_header x-user-payload $auth_user_payload;

            # 2. Path Rewrite: 
            # Request /posts/test is rewritten internally to /api/v1/posts/test
            rewrite ^/posts/(.*)$ /api/v1/posts/$1 break; 

            # 3. Proxy to Upstream: 
            # Nginx now proxies the *rewritten* URI to the post_service.
            proxy_pass http://post_service; 
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}